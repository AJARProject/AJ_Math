{	"count": 179,	"countPass": 179,	"countFail": 0,	"categories": [		{			"category": "Test Math formula",			"count": 168,			"countPass": 168,			"countFail": 0,			"descriptions": [				{					"UUID": "F6288301B7104AE58E8786229C53A7EF",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given expression division (log(8)/log(2)) as argument: should return 3",							"expected": 3,							"actual": 3						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [2] as argument: should return 0.6931471805599",							"expected": 0.6931471805599,							"actual": 0.69314718055995						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-2] as argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passsing (1) as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "log",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_log"				},				{					"UUID": "ED15E6CDE13747C4B9943694F2BA6512",					"tests": [						{							"pass": true,							"result": "ok - Given (3^2)+(4^2): should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given (5^2)+(12^2): should return 13",							"expected": 13,							"actual": 13						},						{							"pass": true,							"result": "ok - Given 0: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "sqrt",					"count": 3,					"countPass": 3,					"countFail": 0,					"method": "_Math_sqrt"				},				{					"UUID": "B72B17A17265452F96D217CB409637EF",					"tests": [						{							"pass": true,							"result": "ok - Given Math.clz32(1): should return 31",							"expected": 31,							"actual": 31						},						{							"pass": true,							"result": "ok - Given Math.clz32(4): should return 29",							"expected": 29,							"actual": 29						},						{							"pass": true,							"result": "ok - Given Math.clz32(1000): should return 22",							"expected": 22,							"actual": 22						}					],					"description": "clz32",					"count": 3,					"countPass": 3,					"countFail": 0,					"method": "_Math_clz32"				},				{					"UUID": "91CA27D5255F49C5AB0E0A01A4699A10",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given expression acosh(0) as argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given expression acosh(1) as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression acosh(-1) as argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given expression cosh(2) as argument: should return 1.3169578969248166",							"expected": 1.316957896925,							"actual": 1.3169578969248						}					],					"description": "acosh",					"count": 5,					"countPass": 5,					"countFail": 0,					"method": "_Math_acosh"				},				{					"UUID": "111F78B230B8404C8BEC1DA4EBD722DA",					"tests": [						{							"pass": true,							"result": "ok - Given 0: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given 1: should return 0.7615941559557649",							"expected": 0.7615941559558,							"actual": 0.76159415595576						},						{							"pass": true,							"result": "ok - Given -1: should return -0.7615941559557649",							"expected": -0.7615941559558,							"actual": -0.76159415595576						},						{							"pass": true,							"result": "ok - Given -100: should return -1",							"expected": -1,							"actual": -1						},						{							"pass": true,							"result": "ok - Given 12: should return 0.9999999999244973",							"expected": 0.9999999999245,							"actual": 0.9999999999245						},						{							"pass": true,							"result": "ok - Given -0.5: should return -0.46211715726000974",							"expected": -0.46211715726,							"actual": -0.46211715726001						}					],					"description": "tanh",					"count": 6,					"countPass": 6,					"countFail": 0,					"method": "_Math_tanh"				},				{					"UUID": "A622BCBBC9F44301B167BBF1E8C4C5BA",					"tests": [						{							"pass": true,							"result": "ok - Given 0: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given 1: should return 1.1752011936438014",							"expected": 1.175201193644,							"actual": 1.1752011936438						},						{							"pass": true,							"result": "ok - Given -1: should return -1.1752011936438014",							"expected": -1.175201193644,							"actual": -1.1752011936438						},						{							"pass": true,							"result": "ok - Given 2: should return 3.626860407847019",							"expected": 3.626860407847,							"actual": 3.626860407847						}					],					"description": "sinh",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_sinh"				},				{					"UUID": "B2DE5B4D60FA4F30AAF705AE05F27141",					"tests": [						{							"pass": true,							"result": "ok - Given passing a collection with one element [1]: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given passing a collection [1;3;2]: should return 3",							"expected": 3,							"actual": 3						},						{							"pass": true,							"result": "ok - Given passing a collection [-1;-3;-2]: should return -1",							"expected": -1,							"actual": -1						},						{							"pass": true,							"result": "ok - Given passing a collection [-1;-3;2]: should return 2",							"expected": 2,							"actual": 2						}					],					"description": "max",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_max"				},				{					"UUID": "915034EAD19A42D1B7C301DCA2649F41",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given expression addition (1+1) as argument: should return 7.38905609893065",							"expected": 7.389056098931,							"actual": 7.3890560989307						},						{							"pass": true,							"result": "ok - Given negative number -1 as argument: should return 0.36787944117144233",							"expected": 0.3678794411714,							"actual": 0.36787944117144						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [1] as argument: should return 2.718281828459045",							"expected": 2.718281828459,							"actual": 2.718281828459						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return 1",							"expected": 1,							"actual": 1						}					],					"description": "exp",					"count": 6,					"countPass": 6,					"countFail": 0,					"method": "_Math_exp"				},				{					"UUID": "89BA240205E443A69EC7955492B2FC1E",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression (0 * Math.PI/180) as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression (45 * Math.PI/180) as argument: should return 1",							"expected": 1.0000000000001,							"actual": 1.0000000000001						},						{							"pass": true,							"result": "ok - Given expression (90 * Math.PI/180) as argument: should return -9649380295141",							"expected": -9649380295141.2,							"actual": -9649380295141.2						},						{							"pass": true,							"result": "ok - Given expression (50 * Math.PI/180) as argument: should return 1.191753592594",							"expected": 1.1917535925943,							"actual": 1.1917535925943						},						{							"pass": true,							"result": "ok - Given expression (60 * Math.PI/180) as argument: should return 1.732050807569",							"expected": 1.7320508075692,							"actual": 1.7320508075692						}					],					"description": "tan",					"count": 6,					"countPass": 6,					"countFail": 0,					"method": "_Math_tan"				},				{					"UUID": "CF660028D2B04135A9F28598E162B4D9",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression addition (3+2.95) as argument: should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given negative number -5.05 as argument: should return -6",							"expected": -6,							"actual": -6						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [5.05] as argument: should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-5.05] as argument: should return -6",							"expected": -6,							"actual": -6						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2.05,3.5] as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "floor",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_floor"				},				{					"UUID": "D20F2CFC443C4068BE710B17DC8EA4C6",					"tests": [						{							"pass": true,							"result": "ok - Given One negative value as argument hypot(): should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given One negative value as argument hypot(-5): should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given A collection of two values hypot([3;4]): should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given A collection of three values hypot([3;4;5]): should return 7.0710678118654755",							"expected": 7.071067811865,							"actual": 7.0710678118655						},						{							"pass": true,							"result": "ok - Given A collection of three values hypot([3;4;\"foo\"]): should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given A collection of three values hypot([3;4;\"5\"]): should return 7.0710678118654755",							"expected": 7.071067811865,							"actual": 7.0710678118655						}					],					"description": "hypot",					"count": 6,					"countPass": 6,					"countFail": 0,					"method": "_Math_hypot"				},				{					"UUID": "B6158D18848241A7BFB3C4EE23584130",					"tests": [						{							"pass": true,							"result": "ok - Given passing (7;3): should return 343",							"expected": 343,							"actual": 343						},						{							"pass": true,							"result": "ok - Given passing (4;0.5): should return 2",							"expected": 2,							"actual": 2						},						{							"pass": true,							"result": "ok - Given passing (7;-2): should return 0.02040816326530612",							"expected": 0.02040816326531,							"actual": 0.020408163265306						},						{							"pass": true,							"result": "ok - Given passing (-7;0.5): should return NaN",							"expected": "",							"actual": ""						}					],					"description": "pow",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_pow"				},				{					"UUID": "FB0FCB60F10545EBA6D85E061004D700",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression atan(8/10) as argument: should return 0.6747409422236",							"expected": 0.67474094222355,							"actual": 0.67474094222355						},						{							"pass": true,							"result": "ok - Given expression (atan(1)*4) as argument: should return 3.14159265359",							"expected": 3.14159265359,							"actual": 3.1415926535898						},						{							"pass": true,							"result": "ok - Given expression atan(5/3) as argument: should return 1.030376826524",							"expected": 1.0303768265243,							"actual": 1.0303768265243						}					],					"description": "atan",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_atan"				},				{					"UUID": "2DA624299E0A41D4AA15A12A1DCD3407",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression addition (-12+13) as argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given negative number -12 as argument: should return 12",							"expected": 12,							"actual": 12						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [2] as argument: should return 2",							"expected": 2,							"actual": 2						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-2] as argument: should return 2",							"expected": 2,							"actual": 2						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "abs",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_abs"				},				{					"UUID": "A1632064AA8D47DB939CA45CCAFC72C9",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given expression division (3/1) as argument: should return 1.584962500721156",							"expected": 1.584962500721,							"actual": 1.5849625007212						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [2] as argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-2] as argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passsing (1) as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "log2",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_log2"				},				{					"UUID": "F8CD0363F0D040A5B2C4FA8DA7E3E1D8",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given expression cos(1)*10 as argument: should return 5.403023058681",							"expected": 5.4030230586814,							"actual": 5.4030230586814						},						{							"pass": true,							"result": "ok - Given expression cos(2)*10 as argument: should return -4.161468365471",							"expected": -4.1614683654714,							"actual": -4.1614683654714						},						{							"pass": true,							"result": "ok - Given expression ((Math.PI)* 10) as argument: should return -10",							"expected": -10,							"actual": -10						}					],					"description": "cos",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_cos"				},				{					"UUID": "5107AD509C8B43848EF612D52D90D17C",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given 1+1: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given 10-13: should return -1",							"expected": -1,							"actual": -1						},						{							"pass": true,							"result": "ok - Given 0: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given \"-3\": should return -1",							"expected": -1,							"actual": -1						},						{							"pass": true,							"result": "ok - Given \"foo\": should return 0",							"expected": 0,							"actual": 0						}					],					"description": "sign",					"count": 6,					"countPass": 6,					"countFail": 0,					"method": "_Math_sign"				},				{					"UUID": "A4B14463C365467EA7F016A6D8829048",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing 0.9 as argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given passing 5.95 as argument: should return 6",							"expected": 6,							"actual": 6						},						{							"pass": true,							"result": "ok - Given passing 5.5 as argument: should return 6",							"expected": 6,							"actual": 6						},						{							"pass": true,							"result": "ok - Given passing 5.05 as argument: should return 5",							"expected": 5,							"actual": 5						},						{							"pass": true,							"result": "ok - Given passing -5.05 as argument: should return -5",							"expected": -5,							"actual": -5						},						{							"pass": true,							"result": "ok - Given passing -5.5 as argument: should return -5",							"expected": -5,							"actual": -5						},						{							"pass": true,							"result": "ok - Given passing -5.95 as argument: should return -6",							"expected": -6,							"actual": -6						}					],					"description": "round",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_round"				},				{					"UUID": "55AB9EBF2F8A4C4EBBFFFC7B362927FA",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression cos(1)*10 as argument: should return 8.414709848079",							"expected": 8.414709848079,							"actual": 8.414709848079						},						{							"pass": true,							"result": "ok - Given expression sin(2)*10 as argument: should return 9.092974268257",							"expected": 9.0929742682568,							"actual": 9.0929742682568						},						{							"pass": true,							"result": "ok - Given expression ((Math.PI)* 10) as argument: should return -0.000000000002068231071102",							"expected": -2.0682310711021E-12,							"actual": -2.0682310711021E-12						}					],					"description": "sin",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_sin"				},				{					"UUID": "CE33B9747D5D46A5A58A0ACC59E4A461",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given \"-INF\" as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given expression cbrt(2/1) as argument: should return 1.2599210498948732",							"expected": 1.259921049895,							"actual": 1.2599210498949						},						{							"pass": true,							"result": "ok - Given expression (cbrt(1*1)) as argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given expression (cbrt(-1) as argument: should return -1",							"expected": -1,							"actual": -1						},						{							"pass": true,							"result": "ok - Given expression cbrt(-0) as argument: should return -0",							"expected": -0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression cbrt(0) as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "cbrt",					"count": 7,					"countPass": 7,					"countFail": 0,					"method": "_Math_cbrt"				},				{					"UUID": "25CC4346F0F04C92BDCAE97DBFAC3DFC",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given expression division (100000/1) as argument: should return 5",							"expected": 5,							"actual": 5.0000000000006						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [2] as argument: should return 0.3010299956639812",							"expected": 0.301029995664,							"actual": 0.30102999566401						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-2] as argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passsing (1) as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "log10",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_log10"				},				{					"UUID": "FF10ED72971C43C79275BB326D40BA76",					"tests": [						{							"pass": true,							"result": "ok - Given passing a collection with one element [1]: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given passing a collection [2;3;1]: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given passing a collection [-2;-3;-1]: should return -3",							"expected": -3,							"actual": -3						},						{							"pass": true,							"result": "ok - Given passing a collection [-1;-3;2]: should return -3",							"expected": -3,							"actual": -3						}					],					"description": "min",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_Math_min"				},				{					"UUID": "985B877614794923A5B29767C8210D50",					"tests": [						{							"pass": true,							"result": "ok - Given Getting a random number between 0 (inclusive) and 1 (exclusive): should return 0.2440565202795",							"expected": 0.24405652027955,							"actual": 0.24405652027955						}					],					"description": "random",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_random"				},				{					"UUID": "2E8F86A6BD914253907B598C7778155B",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing 1 as argument: should return 0.6931471805599453",							"expected": 0.6931471805599,							"actual": 0.69314718055995						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [0] as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-2] as argument: should return NaN",							"expected": "",							"actual": ""						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passsing (-1) as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						}					],					"description": "log1p",					"count": 8,					"countPass": 8,					"countFail": 0,					"method": "_Math_log1p"				},				{					"UUID": "CCAC06EA57194C18A6BC679F27EBF59E",					"tests": [						{							"pass": true,							"result": "ok - Given 13.37: should return 13",							"expected": 13,							"actual": 13						},						{							"pass": true,							"result": "ok - Given 42.84: should return 42",							"expected": 42,							"actual": 42						},						{							"pass": true,							"result": "ok - Given -42.84: should return -42",							"expected": -42,							"actual": -42						},						{							"pass": true,							"result": "ok - Given 0.123: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given -0.123: should return -0",							"expected": -0,							"actual": 0						}					],					"description": "trunc",					"count": 5,					"countPass": 5,					"countFail": 0,					"method": "_Math_trunc"				},				{					"UUID": "271848F16C0640CA907D9E46E77D6B36",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression atanh(1/2) as argument: should return 0.549306144334055",							"expected": 0.5493061443341,							"actual": 0.54930614433405						},						{							"pass": true,							"result": "ok - Given expression (atanh(1*1) as argument: should return INF",							"expected": "INF",							"actual": "INF"						},						{							"pass": true,							"result": "ok - Given expression (atanh(-1) as argument: should return -INF",							"expected": "-INF",							"actual": "-INF"						},						{							"pass": true,							"result": "ok - Given expression atanh(0) as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "atanh",					"count": 5,					"countPass": 5,					"countFail": 0,					"method": "_Math_atanh"				},				{					"UUID": "D17C9D73ECA44BE092CFB301EE80C0D7",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression asinh(0) as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression asinh(1) as argument: should return 0.881373587019543",							"expected": 0.8813735870195,							"actual": 0.88137358701954						},						{							"pass": true,							"result": "ok - Given expression asinh(-1) as argument: should return -0.881373587019543",							"expected": -0.8813735870195,							"actual": -0.88137358701954						},						{							"pass": true,							"result": "ok - Given expression cosh(2) as argument: should return 1.4436354751788103",							"expected": 1.443635475179,							"actual": 1.4436354751788						}					],					"description": "asinh",					"count": 5,					"countPass": 5,					"countFail": 0,					"method": "_Math_asinh"				},				{					"UUID": "92C0C3910F5241DF8454EE1080A7F9A8",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression addition (0+1) as argument: should return 1.718281828459045",							"expected": 1.718281828459,							"actual": 1.718281828459						},						{							"pass": true,							"result": "ok - Given negative number -1 as argument: should return -0.6321205588285577",							"expected": -0.6321205588286,							"actual": -0.63212055882856						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [2] as argument: should return 6.38905609893065",							"expected": 6.389056098931,							"actual": 6.3890560989307						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2,3] as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "expm1",					"count": 6,					"countPass": 6,					"countFail": 0,					"method": "_Math_expm1"				},				{					"UUID": "CCE17F509A414FFDAF814B546E0B17A2",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given expression cosh(0) as argument: should return 1",							"expected": 1,							"actual": 1						},						{							"pass": true,							"result": "ok - Given expression cosh(1) as argument: should return 1.543080634815",							"expected": 1.543080634815,							"actual": 1.5430806348152						},						{							"pass": true,							"result": "ok - Given expression cosh(-1) as argument: should return 1.543080634815",							"expected": 1.5430806348152,							"actual": 1.5430806348152						},						{							"pass": true,							"result": "ok - Given expression cosh(2) as argument: should return 3.762195691084",							"expected": 3.7621956910836,							"actual": 3.7621956910836						}					],					"description": "cosh",					"count": 5,					"countPass": 5,					"countFail": 0,					"method": "_Math_cosh"				},				{					"UUID": "63C609CEA48349F18F8E2302DB941A37",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given text \"NaN\" as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given expression addition (1+0.95) as argument: should return 2",							"expected": 2,							"actual": 2						},						{							"pass": true,							"result": "ok - Given passing 4 as argument: should return 4",							"expected": 4,							"actual": 4						},						{							"pass": true,							"result": "ok - Given negative number -7.004 as argument: should return -7",							"expected": -7,							"actual": -7						},						{							"pass": true,							"result": "ok - Given passing an empty object {} as argument: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given passing a collection with one element [7.004] as argument: should return 8",							"expected": 8,							"actual": 8						},						{							"pass": true,							"result": "ok - Given passing a collection with one element negative [-7.004] as argument: should return -7",							"expected": -7,							"actual": -7						},						{							"pass": true,							"result": "ok - Given passing a collection with more than one element [2.05,3.5] as argument: should return 0",							"expected": 0,							"actual": 0						}					],					"description": "ceil",					"count": 9,					"countPass": 9,					"countFail": 0,					"method": "_Math_ceil"				}			]		},		{			"category": "Test Math properties",			"count": 10,			"countPass": 10,			"countFail": 0,			"descriptions": [				{					"UUID": "02B5F7E9590C405A90D8F5A1AE037520",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 1.414213562373",							"expected": 1.4142135623731,							"actual": 1.414213562373						}					],					"description": "SQRT2",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_SQRT2"				},				{					"UUID": "866BE88C30F744B9B27192A9F14A5DCD",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 2.718281828459",							"expected": 2.718281828459,							"actual": 2.718281828459						}					],					"description": "E",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_E"				},				{					"UUID": "87695BF54938421B8C53DA38E876D3EE",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 57.29577951308",							"expected": 57.295779513082,							"actual": 57.29577951308						}					],					"description": "Radian",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_Radian"				},				{					"UUID": "80E703F2E099447997FFF1FA33E69115",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 1.4426950408889634",							"expected": 1.442695040889,							"actual": 1.442695040889						}					],					"description": "LOG2E",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_LOG2E"				},				{					"UUID": "5495440A867948A388D6F2009ECD10C5",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0.4342944819033",							"expected": 0.4342944819033,							"actual": 0.4342944819033						}					],					"description": "LOG10E",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_LOG10E"				},				{					"UUID": "94A827A187504ECDA7CCBF8A71665AB8",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 3.14159265359",							"expected": 3.1415926535898,							"actual": 3.14159265359						}					],					"description": "PI",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_PI"				},				{					"UUID": "04C6E727E2D6416BAEFEB893FD9D2B7D",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0.6931471805599",							"expected": 0.69314718055995,							"actual": 0.6931471805599						}					],					"description": "LN2",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_LN2"				},				{					"UUID": "D1E5AB1E84B747768089FFC179D8C5EC",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 2.302585092994",							"expected": 2.302585092994,							"actual": 2.302585092994						}					],					"description": "LN10",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_LN10"				},				{					"UUID": "6AB0DAD051E44FAFADB5F8A43C9FB3FD",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0.01745329251994",							"expected": 0.017453292519943,							"actual": 0.01745329251994						}					],					"description": "Degree",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_Degree"				},				{					"UUID": "78D01F4C345C4C0CB9D8657BB853B029",					"tests": [						{							"pass": true,							"result": "ok - Given no argument: should return 0.7071067811865",							"expected": 0.70710678118655,							"actual": 0.7071067811865						}					],					"description": "SQRT1_2",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Math_Properties_SQRT1_2"				}			]		},		{			"category": "Tools",			"count": 1,			"countPass": 1,			"countFail": 0,			"descriptions": [				{					"UUID": "C3608723D6844EB69C8CF8F8E08BD67A",					"tests": [						{							"pass": true,							"result": "ok - Given 32766: should return 00000000000000000111111111111110",							"expected": "00000000000000000111111111111110",							"actual": "00000000000000000111111111111110"						}					],					"description": "Convert a longint to a binary string",					"count": 1,					"countPass": 1,					"countFail": 0,					"method": "_Tool_Longint2BinaryString"				}			]		}	],	"result": true,	"lastTestDate": "February 20, 2020 - 11:35"}